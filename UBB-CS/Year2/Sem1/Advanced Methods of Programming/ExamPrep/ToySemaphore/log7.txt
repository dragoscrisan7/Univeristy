Id: 1
Execution stack: 
(v is Ref(int)|(New(v, int(20))|(a is Ref(Ref(int))|(New(a, v)|(New(v, int(30))|print(a))))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v is Ref(int)
(New(v, int(20))|(a is Ref(Ref(int))|(New(a, v)|(New(v, int(30))|print(a)))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
v is Ref(int)
(New(v, int(20))|(a is Ref(Ref(int))|(New(a, v)|(New(v, int(30))|print(a)))))
Symbol table: 
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(New(v, int(20))|(a is Ref(Ref(int))|(New(a, v)|(New(v, int(30))|print(a)))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(New(v, int(20))|(a is Ref(Ref(int))|(New(a, v)|(New(v, int(30))|print(a)))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
New(v, int(20))
(a is Ref(Ref(int))|(New(a, v)|(New(v, int(30))|print(a))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
New(v, int(20))
(a is Ref(Ref(int))|(New(a, v)|(New(v, int(30))|print(a))))
Symbol table: 
v -> (0, int)
Output list: 
File table:
Heap memory:

Id: 1
Execution stack: 
(a is Ref(Ref(int))|(New(a, v)|(New(v, int(30))|print(a))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)

Id: 1
Execution stack: 
(a is Ref(Ref(int))|(New(a, v)|(New(v, int(30))|print(a))))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)

Id: 1
Execution stack: 
a is Ref(Ref(int))
(New(a, v)|(New(v, int(30))|print(a)))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)

Id: 1
Execution stack: 
a is Ref(Ref(int))
(New(a, v)|(New(v, int(30))|print(a)))
Symbol table: 
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)

Id: 1
Execution stack: 
(New(a, v)|(New(v, int(30))|print(a)))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)

Id: 1
Execution stack: 
(New(a, v)|(New(v, int(30))|print(a)))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)

Id: 1
Execution stack: 
New(a, v)
(New(v, int(30))|print(a))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)

Id: 1
Execution stack: 
New(a, v)
(New(v, int(30))|print(a))
Symbol table: 
a -> (0, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)

Id: 1
Execution stack: 
(New(v, int(30))|print(a))
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)
2 -> (1, int)

Id: 1
Execution stack: 
(New(v, int(30))|print(a))
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)
2 -> (1, int)

Id: 1
Execution stack: 
New(v, int(30))
print(a)
Symbol table: 
a -> (2, Ref(int))
v -> (1, int)
Output list: 
File table:
Heap memory:
1 -> int(20)
2 -> (1, int)

