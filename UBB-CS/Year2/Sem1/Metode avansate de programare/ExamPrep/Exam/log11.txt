Id: 1
Execution stack: 
(v1 is Ref(int)|(v2 is Ref(int)|(v3 is Ref(int)|(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
v1 is Ref(int)
(v2 is Ref(int)|(v3 is Ref(int)|(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
v1 is Ref(int)
(v2 is Ref(int)|(v3 is Ref(int)|(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))))))
Symbol table: 
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
(v2 is Ref(int)|(v3 is Ref(int)|(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
(v2 is Ref(int)|(v3 is Ref(int)|(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
v2 is Ref(int)
(v3 is Ref(int)|(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
v2 is Ref(int)
(v3 is Ref(int)|(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))))))
Symbol table: 
v1 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
(v3 is Ref(int)|(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
(v3 is Ref(int)|(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
v3 is Ref(int)
(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
v3 is Ref(int)
(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
(cnt is int|(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
cnt is int
(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
cnt is int
(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))))
Symbol table: 
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))))
Symbol table: 
cnt -> int(0)
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
(New(v1, int(2))|(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))))
Symbol table: 
cnt -> int(0)
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
New(v1, int(2))
(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))
Symbol table: 
cnt -> int(0)
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
New(v1, int(2))
(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))
Symbol table: 
cnt -> int(0)
v1 -> (0, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
Barrier table:

Id: 1
Execution stack: 
(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
Barrier table:

Id: 1
Execution stack: 
(New(v2, int(3))|(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
Barrier table:

Id: 1
Execution stack: 
New(v2, int(3))
(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
Barrier table:

Id: 1
Execution stack: 
New(v2, int(3))
(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (0, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
Barrier table:

Id: 1
Execution stack: 
(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
Barrier table:

Id: 1
Execution stack: 
(New(v3, int(4))|(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
Barrier table:

Id: 1
Execution stack: 
New(v3, int(4))
(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
Barrier table:

Id: 1
Execution stack: 
New(v3, int(4))
(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (0, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
Barrier table:

Id: 1
Execution stack: 
(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:

Id: 1
Execution stack: 
(newBarrier(cnt, v2)|(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:

Id: 1
Execution stack: 
newBarrier(cnt, v2)
(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:

Id: 1
Execution stack: 
newBarrier(cnt, v2)
(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))
Symbol table: 
cnt -> int(0)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:

Id: 1
Execution stack: 
(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 1
Execution stack: 
(Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))|(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3))))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 1
Execution stack: 
Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))
(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 1
Execution stack: 
Fork((await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1))))
(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 1
Execution stack: 
(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 2
Execution stack: 
(await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1)))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 1
Execution stack: 
(Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))|(await(cnt)|print(v3)))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 2
Execution stack: 
(await(cnt)|(WriteHeap(v1, v1 * int(10))|print(v1)))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 1
Execution stack: 
Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))
(await(cnt)|print(v3))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 2
Execution stack: 
await(cnt)
(WriteHeap(v1, v1 * int(10))|print(v1))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 1
Execution stack: 
Fork((await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))))
(await(cnt)|print(v3))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 2
Execution stack: 
await(cnt)
(WriteHeap(v1, v1 * int(10))|print(v1))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [])

Id: 1
Execution stack: 
(await(cnt)|print(v3))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 2
Execution stack: 
(WriteHeap(v1, v1 * int(10))|print(v1))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 3
Execution stack: 
(await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2))))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 1
Execution stack: 
(await(cnt)|print(v3))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 2
Execution stack: 
(WriteHeap(v1, v1 * int(10))|print(v1))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 3
Execution stack: 
(await(cnt)|(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2))))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 1
Execution stack: 
await(cnt)
print(v3)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 2
Execution stack: 
WriteHeap(v1, v1 * int(10))
print(v1)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 3
Execution stack: 
await(cnt)
(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 1
Execution stack: 
await(cnt)
print(v3)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 2
Execution stack: 
WriteHeap(v1, v1 * int(10))
print(v1)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 3
Execution stack: 
await(cnt)
(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(2)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2])

Id: 1
Execution stack: 
print(v3)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(20)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 2
Execution stack: 
print(v1)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(20)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(20)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 1
Execution stack: 
print(v3)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(20)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 2
Execution stack: 
print(v1)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(20)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
(WriteHeap(v2, v2 * int(10))|(WriteHeap(v2, v2 * int(10))|print(v2)))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
File table:
Heap memory:
1 -> int(20)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 1
Execution stack: 
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
File table:
Heap memory:
1 -> int(20)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 2
Execution stack: 
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
File table:
Heap memory:
1 -> int(20)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
WriteHeap(v2, v2 * int(10))
(WriteHeap(v2, v2 * int(10))|print(v2))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
File table:
Heap memory:
1 -> int(20)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
WriteHeap(v2, v2 * int(10))
(WriteHeap(v2, v2 * int(10))|print(v2))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
File table:
Heap memory:
1 -> int(20)
2 -> int(3)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
(WriteHeap(v2, v2 * int(10))|print(v2))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
File table:
Heap memory:
1 -> int(20)
2 -> int(30)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
(WriteHeap(v2, v2 * int(10))|print(v2))
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
File table:
Heap memory:
1 -> int(20)
2 -> int(30)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
WriteHeap(v2, v2 * int(10))
print(v2)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
File table:
Heap memory:
1 -> int(20)
2 -> int(30)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
WriteHeap(v2, v2 * int(10))
print(v2)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
File table:
Heap memory:
1 -> int(20)
2 -> int(30)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
print(v2)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
File table:
Heap memory:
1 -> int(20)
2 -> int(300)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
print(v2)
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
File table:
Heap memory:
1 -> int(20)
2 -> int(300)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

Id: 3
Execution stack: 
Symbol table: 
cnt -> int(1)
v1 -> (1, int)
v2 -> (2, int)
v3 -> (3, int)
Output list: 
int(4)
int(20)
int(300)
File table:
Heap memory:
1 -> int(20)
2 -> int(300)
3 -> int(4)
Barrier table:
1 -> (3, [2, 1, 3])

